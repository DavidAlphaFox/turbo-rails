# The streams channel delivers all the turbo-stream actions created (primarily) through <tt>Turbo::Broadcastable</tt>.
# A subscription to this channel is made for each individual stream that one wishes to listen for updates to.
# The subscription relies on being passed a <tt>signed_stream_name</tt> parameter generated by turning a set of streamables
# into signed stream name using <tt>Turbo::Streams::StreamName#signed_stream_name</tt>. This is automatically done
# using the view helper <tt>Turbo::StreamsHelper#turbo_stream_from(*streamables)</tt>.
# If the signed stream name cannot be verified, the subscription is rejected.
#
# Subscribe to custom channels by passing the <tt>:channel</tt> option to <tt>turbo_stream_from</tt>:
# <%= turbo_stream_from "room", channel: CustomChannel %>
#
# Any channel that listens to a <tt>Turbo::Broadcastable</tt>-compatible stream name (e.g., <tt>verified_stream_name_from_params</tt>)
# can also be subscribed to via <tt>Turbo::StreamsChannel</tt>. Never use the <tt>turbo_stream_from</tt> <tt>:channel</tt> option
# to implement authorization. Authorizing subscriptions is often recommended, see the README for details.
class Turbo::StreamsChannel < Turbo.base_stream_channel_class.constantize
  extend Turbo::Streams::Broadcasts, Turbo::Streams::StreamName
  include Turbo::Streams::LocatableName, Turbo::Streams::StreamName::ClassMethods

  def subscribed
    if (stream_name = verified_stream_name_from_params) && authorized?
      stream_from stream_name
    else
      reject
    end
  end

  private
    # Override this method to define custom authorization rules in <tt>config.turbo.base_stream_channel_class</tt>.
    # Refer to <tt>Turbo::Streams::LocatableName</tt> for details on locating streamables.
    #
    # By default, no authorization is performed.
    def authorized?
      defined?(super) ? super : true
    end
end
